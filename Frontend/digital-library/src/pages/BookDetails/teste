import React, { useEffect, useState } from "react";
import Header from "../../components/header";
import Footer from "../../components/footer";
import { useLocation } from 'react-router-dom';
import imgbook from '../../assets/book.jpg'
import './styles.css'
import { Modal, Button } from 'react-bootstrap';
import * as Icon from 'react-bootstrap-icons'


function BookDetails() {
    
    const { search } = useLocation();
    const [id, setId] = useState()
    const [book, setBook] = useState(null)

    const [showModal, setShowModal] = useState(false)
    const [bookshelfName, setBookshelfName] = useState('')
    const [bookshelfID, setBookshelfID] = useState('')
    const [bookshelf, setBookshelf] =useState([])
    const [myBookshelf, setMyBookshelf] = useState(null)

    const [bookshelfIdSelect, setBookshelfIdSelect] = useState('')
    const [bookshelfNameSelect, setBookshelfNameSelect] = useState('')

    const [loading, setLoading] = useState(true);

    const [selectBookshelf, setSelectBookshelf] = useState(false)

    useEffect(() => {
        const searchParams = new URLSearchParams(search);
        const data = searchParams.get('id');
        setId(data);

        if (data == null) {
            window.location.href = '/book';
        }

        Promise.all([
            fetch('http://127.0.0.1:8000/getBookById?id=' + data).then(response => response.json()),
            fetch('http://127.0.0.1:8000/getAllBookshelf?id_user=66251e4eede07cfa79f98bf9').then(response => response.json()),
            fetch('http://127.0.0.1:8000/getBookInBookshelfByIdBook?id_book=' + data + '&id_user=66251e4eede07cfa79f98bf9').then(response => response.json())
        ])
        .then(([bookData, bookshelfData, myBookshelfData]) => {
            setBook(bookData);
            setBookshelf(bookshelfData);
            setMyBookshelf(myBookshelfData);
            console.log(bookData)
            console.log(bookshelfData)
            console.log(myBookshelfData)
            console.log(book)
            console.log(bookshelf)
            console.log(myBookshelf)
            if (myBookshelf !== null){
                setBookshelfNameSelect(myBookshelf.name)
            }
            setLoading(false);
        })
        .catch(error => console.error('Error fetching data:', error));
    }, []);




    const addBookToBookshelf = () => {
        setShowModal(true)
    }

    const handleCloseModal = () => {
        setShowModal(false)
    }

    const handleBookshelfChange = (selected) => {
        const [selectedId, selectedName] = selected.split(';');
    
        /* setBookshelfID(selectedId);
        setBookshelfName(selectedName); */
        setBookshelfIdSelect(selectedId+'');
        setBookshelfNameSelect(selectedName);
        
        console.log('\nselectedId:'+ selectedId);
        console.log('selectedName:'+ selectedName);
        console.log('bookshelfIdSelect:', bookshelfIdSelect);
        console.log('bookshelfNameSelect:'+ bookshelfNameSelect);
    }
    
    
    
    const handleAddModal = () => {
        setBookshelfID(bookshelfIdSelect);
        setBookshelfName(bookshelfNameSelect);
        console.log("id:" + bookshelfIdSelect)
        console.log("id:"+bookshelfID)
        console.log("Name:" + bookshelfNameSelect)
        console.log("Name:"+bookshelfName)
        
        fetch('http://127.0.0.1:8000/insertBookInBookshelf?id_book='+id+'&id_bookshelf='+bookshelfIdSelect, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
        })
        .then(response => {
          if (!response.ok) {
            throw new Error('Failed to insert book in bookshelf');
          }
          return response.json();
        })
        .then(data => {
          //setRes(true)
          
        })
        .catch(error => {
          console.error('Error inserting bookshelf:', error);
          //setRes('Error inserting bookshelf::', error)
        });
        //setNameBookshelf('')
        //setShow(false)

        setShowModal(false)
    }

    const handleUpdateModal = () => {
        console.log("ID: " + book.id)
        console.log("Last ID: " + myBookshelf.id)
        console.log("New ID: " + bookshelfIdSelect)

        if (bookshelfIdSelect !== '') {
            
            setShowModal(false)
        }


    }


    return (
        <div>
            <Header pageName={'Book Details'} />

            <section>
                {book !== null && (
                    <div class="mb-3">
                        <div class="row g-0">
                            <div class="col-md-4">
                                <img src={imgbook} class="img-fluid rounded-start" alt="..." />
                            </div>
                            <div class="col-md-8">
                                <div class="card-body">
                                    <h5 className="card-name">{book.name}</h5>
                                    <p className="card-author">{book.author}</p>
                                    <p className="card-category">{book.category}</p>
                                    <hr />
                                    <div>
                                        <div className="card-borrowed">
                                            <div>
                                                <label>Borrow date</label>
                                                <input type="date" />
                                            </div>
                                            <div>
                                                <label>Returned date</label>
                                                <input type="date" />
                                            </div>
                                            <div>
                                                <button>
                                                    Borrowed
                                                </button>
                                            </div>
                                        </div>
                                        <div className="card-ToAdd">
                                            {bookshelfName.length == 0
                                                ? myBookshelf == null
                                                    ?   <button onClick={() => addBookToBookshelf()}>
                                                            Add in <Icon.CaretDown className="icon-down" />
                                                        </button>
                                                    :   <button onClick={() => addBookToBookshelf()}>
                                                            {myBookshelf.name} <Icon.CaretDown className="icon-down" />
                                                        </button>
                                                : bookshelfName.length != 0
                                                    ?   <button onClick={() => addBookToBookshelf()}>
                                                            {bookshelfName} <Icon.CaretDown className="icon-down" />
                                                        </button>
                                                    :   <button onClick={() => addBookToBookshelf()}>
                                                            {myBookshelf.name} <Icon.CaretDown className="icon-down" />
                                                        </button>
                                            }
                                        </div>
                                    </div>
                                    <hr />
                                    <div>
                                        <div className="card-description">
                                            <h5>Description</h5>
                                            <p>{book.description}</p>
                                        </div>
                                        <div className="card-bookinformation">
                                            <h5>Book information</h5>
                                            <p><span>Pages</span> {book.pages}</p>
                                            <p><span>Published</span> {book.published}</p>
                                            <p><span>Publisher</span> {book.publisher}</p>
                                            <p><span>ISBN</span> {book.isbn}</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                )}
            </section>
            <Modal className="modal" show={showModal} onHide={handleCloseModal}>
                    <Modal.Header closeButton>
                        <Modal.Title className="modalTitle">Add {book?.name} in bookshelft</Modal.Title>
                    </Modal.Header>
                    <Modal.Body>
                        <div className="modalBody">
                            <label>Bookshelf</label>
                            
                            <select onChange={(event) => handleBookshelfChange(event.target.value)}>
                                {bookshelfID === '' && (
                                    <option disabled>Select bookshelf</option>
                                )}
                                {bookshelf.map(b => (
                                    <option key={b.id} value={b.id+';'+b.name} selected={bookshelfName === b.name}>
                                        {b.name}
                                    </option>
                                ))}
                            </select>
                        </div>
                    </Modal.Body>
                    <Modal.Footer>
                        <div className="modalFooter">
                            <Button className="buttonCancel" onClick={handleCloseModal}>
                                Cancel
                            </Button>
                            {bookshelfName.length == 0
                                ? myBookshelf == null
                                    ?   <Button className="buttonAdd" onClick={() => handleAddModal()}>
                                            Add
                                        </Button>
                                    :   <Button className="buttonAdd" onClick={() => handleUpdateModal()}>
                                            update
                                        </Button>
                                :   <Button className="buttonAdd" onClick={() => handleUpdateModal()}>
                                        update
                                    </Button>
                            }
                          
                            
                        </div>
                    </Modal.Footer>
                </Modal>

            <Footer />
        </div>
    )
}

export default BookDetails;  
